#
# @object.py Copyright (c) 2022 Jalasoft.
# 2643 Av Melchor Perez de Olguin, Colquiri Sud, Cochabamba, Bolivia.
# Edificio Union â„– 1376 Av. General Inofuentes esquina Calle 20, La Paz, Bolivia.
# All rights reserved.
#
# This software is the confidential and proprietary information of
# Jalasoft, ("Confidential Information"). You shall not
# disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered into
# with Jalasoft.
#

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Object(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, time: str=None, percentage: float=None):  # noqa: E501
        """Object - a model defined in Swagger

        :param name: The name of this Object.  # noqa: E501
        :type name: str
        :param time: The time of this Object.  # noqa: E501
        :type time: str
        :param percentage: The percentage of this Object.  # noqa: E501
        :type percentage: float
        """
        self.swagger_types = {
            'name': str,
            'time': str,
            'percentage': float
        }

        self.attribute_map = {
            'name': 'Name',
            'time': 'Time',
            'percentage': 'Percentage'
        }

        self._name = name
        self._time = time
        self._percentage = percentage

    @classmethod
    def from_dict(cls, dikt) -> 'Object':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Object of this Object.  # noqa: E501
        :rtype: Object
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Object.


        :return: The name of this Object.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Object.


        :param name: The name of this Object.
        :type name: str
        """

        self._name = name

    @property
    def time(self) -> str:
        """Gets the time of this Object.


        :return: The time of this Object.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time: str):
        """Sets the time of this Object.


        :param time: The time of this Object.
        :type time: str
        """

        self._time = time

    @property
    def percentage(self) -> float:
        """Gets the percentage of this Object.


        :return: The percentage of this Object.
        :rtype: float
        """
        return self._percentage

    @percentage.setter
    def percentage(self, percentage: float):
        """Sets the percentage of this Object.


        :param percentage: The percentage of this Object.
        :type percentage: float
        """

        self._percentage = percentage

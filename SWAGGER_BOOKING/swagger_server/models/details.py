#
# @details.py Copyright (c) 2022 Jalasoft.
# 2643 Av Melchor Perez de Olguin, Colquiri Sud, Cochabamba, Bolivia.
# Edificio Union â„– 1376 Av. General Inofuentes esquina Calle 20, La Paz, Bolivia.
# All rights reserved.
#
# This software is the confidential and proprietary information of
# Jalasoft, ("Confidential Information"). You shall not
# disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered into
# with Jalasoft.
#

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401
from typing import List, Dict  # noqa: F401
from swagger_server.models.base_model_ import Model
from swagger_server import util


class Details(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, subject: str=None, description: str=None):  # noqa: E501
        """Details - a model defined in Swagger

        :param subject: The subject of this Details.  # noqa: E501
        :type subject: str
        :param description: The description of this Details.  # noqa: E501
        :type description: str
        """
        self.swagger_types = {
            'subject': str,
            'description': str
        }

        self.attribute_map = {
            'subject': 'subject',
            'description': 'description'
        }

        self._subject = subject
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'Details':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Details of this Details.  # noqa: E501
        :rtype: Details
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subject(self) -> str:
        """Gets the subject of this Details.


        :return: The subject of this Details.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject: str):
        """Sets the subject of this Details.


        :param subject: The subject of this Details.
        :type subject: str
        """

        self._subject = subject

    @property
    def description(self) -> str:
        """Gets the description of this Details.


        :return: The description of this Details.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Details.


        :param description: The description of this Details.
        :type description: str
        """

        self._description = description
